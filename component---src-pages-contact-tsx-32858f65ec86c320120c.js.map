{"version":3,"sources":["webpack:///./src/data/contact.tsx","webpack:///./src/components/ContactList.tsx","webpack:///./src/pages/Contact.tsx","webpack:///./src/components/SectionHeader.tsx"],"names":["contact","icon","field","ContactList","_ref","data","react","map","el","key","style","paddingRight","className","Contact","SectionHeader","title","components_ContactList","ContactData","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react_spring__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","animation","useSpring","to","opacity","marginLeft","from","id","paddingTop","span","margin"],"mappings":"qHAOeA,EAPC,CACd,CAAEC,KAAM,kBAAmBC,MAAO,2BAClC,CAAED,KAAM,gBAAiBC,MAAO,YAChC,CAAED,KAAM,kBAAmBC,MAAO,iBAClC,CAAED,KAAM,sBAAuBC,MAAO,uDCWzBC,EAbK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAClBC,EAAA,cAACA,EAAA,SAAD,KACGD,EAAKE,IAAI,SAAAC,GAAE,OACVF,EAAA,qBAAKG,IAAG,WAAaD,EAAGP,MACtBK,EAAA,0BACEA,EAAA,mBAAGI,MAAO,CAAEC,aAAc,QAAUC,UAAWJ,EAAGP,OAClDK,EAAA,uBAAIE,EAAGN,aCIFW,UAPC,kBACdP,EAAA,cAACA,EAAA,SAAD,KACEA,EAAA,cAACQ,EAAA,EAAD,CAAeC,MAAM,UAAUd,KAAK,kBACpCK,EAAA,cAACU,EAAD,CAAaX,KAAMY,wCCRvB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAA,KAQeE,EAAA,WAAAjB,GAAyC,IAAtCH,EAAsCG,EAAtCH,KAAMc,EAAgCX,EAAhCW,MAChBO,EAAYC,YAAU,CAC1BC,GAAI,CAAEC,QAAS,EAAGC,WAAY,QAC9BC,KAAM,CAAEF,QAAS,EAAGC,WAAY,UAGlC,OACER,EAAA,qBAAKU,GAAE,WAAab,EAASL,MAAO,CAAEmB,WAAY,SAChDX,EAAA,cAACE,EAAA,EAASU,KAAV,CAAepB,MAAOY,EAAWV,UAAU,iCACzCM,EAAA,mBAAGR,MAAO,CAAEC,aAAc,QAAUC,UAAS,OAASX,IACrDc,GAEHG,EAAA,qBAAKR,MAAO,CAAEqB,OAAQ,UAAYnB,UAAU","file":"component---src-pages-contact-tsx-32858f65ec86c320120c.js","sourcesContent":["const contact = [\n  { icon: 'fas fa-envelope', field: 'albert.alises@gmail.com' },\n  { icon: 'fab fa-github', field: '/aalises' },\n  { icon: 'fab fa-linkedin', field: '/albertalises' },\n  { icon: 'fas fa-globe-europe', field: 'Based in Barcelona, open to work remote / relocate' },\n];\n\nexport default contact;\n","import * as React from 'react';\n\nconst ContactList = ({ data }: any[]) => (\n  <React.Fragment>\n    {data.map(el => (\n      <div key={`contact-${el.icon}`}>\n        <span>\n          <i style={{ paddingRight: '1rem' }} className={el.icon} />\n          <i>{el.field}</i>\n        </span>\n      </div>\n    ))}\n  </React.Fragment>\n);\n\nexport default ContactList;\n","import * as React from 'react';\nimport SectionHeader from '../components/SectionHeader';\nimport ContactData from '../data/contact';\nimport ContactList from '../components/ContactList';\n\nconst Contact = () => (\n  <React.Fragment>\n    <SectionHeader title=\"Contact\" icon=\"fa-mobile-alt\" />\n    <ContactList data={ContactData} />\n  </React.Fragment>\n);\n\nexport default Contact;\n","import * as React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\ninterface SectionHeaderProps {\n  icon: string;\n  title: string;\n}\n\nexport default ({ icon, title }: SectionHeaderProps) => {\n  const animation = useSpring({\n    to: { opacity: 1, marginLeft: '0rem' },\n    from: { opacity: 0, marginLeft: '2rem' },\n  });\n\n  return (\n    <div id={`section-${title}`} style={{ paddingTop: '2rem' }}>\n      <animated.span style={animation} className=\"title is-4 has-text-grey-dark\">\n        <i style={{ paddingRight: '1rem' }} className={`fas ${icon}`} />\n        {title}\n      </animated.span>\n      <div style={{ margin: '1rem 0' }} className=\"is-divider\" />\n    </div>\n  );\n};\n"],"sourceRoot":""}